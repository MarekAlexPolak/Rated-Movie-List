{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Rated-Movie-List\\\\src\\\\components\\\\MovieDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieDetail = () => {\n  _s();\n  let {\n    state\n  } = useLocation();\n  console.log(state);\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.themoviedb.org/3/movie/' + state.id, {\n          headers: {\n            'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZDQxNjMzYjhmZGFlZTg0YWNkNTU1ZWY5MTFmZjIxMSIsInN1YiI6IjY1Mjk5YWU3MWYzZTYwMDBhYzRkODExZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.eClhzdu5OPTFJvvTOKpoetCAbfc2vVRQA2cNniX3m00',\n            // Replace with your API key\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const result = await response.json();\n          setMovie(result);\n        } else {\n          console.error('Error fetching data:', response.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  if (!movie) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-detail-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: movie.overview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Budget: \" + movie.budget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n_s(MovieDetail, \"LjU/R/Q7kvDqk/9KtkA8N28xVok=\", false, function () {\n  return [useLocation];\n});\n_c = MovieDetail;\nexport default MovieDetail;\nvar _c;\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","MovieDetail","_s","state","console","log","movie","setMovie","fetchData","response","fetch","id","headers","ok","result","json","error","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","overview","budget","_c","$RefreshReg$"],"sources":["E:/Projects/Rated-Movie-List/src/components/MovieDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst MovieDetail = () => {\r\n    let { state } = useLocation();\r\n    console.log(state);\r\n    const [movie, setMovie] = useState(null);\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await fetch('https://api.themoviedb.org/3/movie/'+state.id, {\r\n            headers: {\r\n              'Authorization': 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZDQxNjMzYjhmZGFlZTg0YWNkNTU1ZWY5MTFmZjIxMSIsInN1YiI6IjY1Mjk5YWU3MWYzZTYwMDBhYzRkODExZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.eClhzdu5OPTFJvvTOKpoetCAbfc2vVRQA2cNniX3m00', // Replace with your API key\r\n              'Content-Type': 'application/json',\r\n            },\r\n          });\r\n          if (response.ok) {\r\n            const result = await response.json();\r\n            setMovie(result);\r\n          } else {\r\n            console.error('Error fetching data:', response.statusText);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching data:', error);\r\n        }\r\n      };\r\n      fetchData();\r\n    }, []);\r\n  \r\n    if (!movie) {\r\n      return <div>Loading...</div>;\r\n    }\r\n  \r\n    return (\r\n      <div className='movie-detail-main'>\r\n        <h2>{movie.title}</h2>\r\n        <p>{movie.overview}</p>\r\n        <p>{\"Budget: \" + movie.budget}</p>\r\n        {/* Add additional movie details here */}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default MovieDetail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,IAAI;IAAEC;EAAM,CAAC,GAAGL,WAAW,CAAC,CAAC;EAC7BM,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxCC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,GAACP,KAAK,CAACQ,EAAE,EAAE;UAC3EC,OAAO,EAAE;YACP,eAAe,EAAE,4NAA4N;YAAE;YAC/O,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACF,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UACpCR,QAAQ,CAACO,MAAM,CAAC;QAClB,CAAC,MAAM;UACLV,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEP,QAAQ,CAACQ,UAAU,CAAC;QAC5D;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdZ,OAAO,CAACY,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,KAAK,EAAE;IACV,oBAAON,OAAA;MAAAkB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,mBAAmB;IAAAL,QAAA,gBAChClB,OAAA;MAAAkB,QAAA,EAAKZ,KAAK,CAACkB;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBtB,OAAA;MAAAkB,QAAA,EAAIZ,KAAK,CAACmB;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBtB,OAAA;MAAAkB,QAAA,EAAI,UAAU,GAAGZ,KAAK,CAACoB;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/B,CAAC;AAEZ,CAAC;AAACpB,EAAA,CAtCID,WAAW;EAAA,QACGH,WAAW;AAAA;AAAA6B,EAAA,GADzB1B,WAAW;AAwCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}